import urllib
import smtplib
import urllib.request
from bs4 import BeautifulSoup
import smtplib


from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# me == my email address
# you == recipient's email address
me = "abhjeet.mitra@empower-retirement.com"
you = "abhjeet.mitra@empower-retirement.com"

# Create message container - the correct MIME type is multipart/alternative.
msg = MIMEMultipart('alternative')
msg['Subject'] = "Advice and guidance smoke test"
msg['From'] = me
msg['To'] = you

#websites url
url1 = "https://isis.retirementpartner.com/aagAdmin"
url2 = "https://tas.retirementpartner.com/aagAdmin"
url3 = "https://isis.retirementpartner.com/aagAdmin/service/ClickWrap.jsp?planIDs=95775-02"
url4 = "http://fss-pcasvip:8080/jkstatus"
#wesbite html coding

l = [ url1, url2, url3, url4 ]
server_names = []
error_list = []
failure_reason_list = []

for i in l:
    start_ind = i.find( '//' ) + 2
    temp_url =  i[ start_ind : ]
    end_ind = temp_url.find( '/' )
    
    server_names.append( temp_url[ : end_ind ] )

print( f"server_names = { server_names }\n\n")

"""
#Not_Required - But Don't remove
soup_l = []

i = 0
while( i<len(l) ):
    try:
        print( f"Soup Try {i+1}")
        request = urllib.request.Request( l[i] )
        soup_l.append( BeautifulSoup( urllib.request.urlopen( request ).read(), "html.parser" ) )
        #soup_l.append( BeautifulSoup(urllib.request.urlopen( l[i] ) , "html.parser" ) )
        #soup_l.append( BeautifulSoup(urllib.request.urlopen( l[i] ) ) )

    except Exception as e:
        print( f"Soup Except {i+1}")
        if( l[i] not in error_list ):
            failure_reason_list.append( "soup_l : "+str( e ) )
            error_list.append( l[i] )
        print( f"Exception Occured = { e }\n" )

    finally:
        i = i + 1

print()
print()
"""

#website http status 200 is ok and 404 is down
web_l = []

i = 0
while( i<len(l) ):
    
    try:
        print( f"web_l Try {i+1}")
        request = urllib.request.Request( l[i] )
        web_l.append( urllib.request.urlopen( request ).getcode() )
            
    except Exception as e:
        print( f"web_l Except {i+1}")
        if( l[i] not in error_list ):
            failure_reason_list.append( "web_l : "+str( e ) )
            error_list.append( l[i] )

        print( f"Exception Occured = { e }\n" )

    finally:
        i = i + 1

print( f"web_l = { web_l }\n\n")

print()
print()
#httpresponse connetion id
"""
#Not_Required - But Don't remove
page_l = []

i = 0
while(i<len(l)):
    try:
        print( f"page_l Try {i+1}")
        request = urllib.request.Request( l[i] )
        page_l.append( urllib.request.urlopen (  request ) )
            
    except Exception as e:
        print( f"page_l Except {i+1}")
        if( l[i] not in error_list ):
                error_list.append( l[i] )
                failure_reason_list.append(  "page_l : "+str( e ) )

        print( f"Exception Occured = { e }\n" )

    finally:
        i = i + 1            

print( f"page_l = { page_l }\n\n")
print()
print()

#website content count
content_l = []

i = 0
while( i<len( page_l ) ):
    try:
        print( f"content_l Try {i+1}")
        content_l.append( len( page_l[i].read() ) )
            
    except Exception as e:
        print( f"content_l Except {i+1}")
        if( l[i] not in error_list ):
            failure_reason_list.append( "Content : "+str( e ) )
            error_list.append( l[i] )

        print( f"Exception Occured = { e }\n" )

    finally:
        i = i + 1    

print( f"content_l = { content_l }\n\n")
print()
print()

#to get titile of the websites   
title_l = []
for i in soup_l:
    title_l.append( i.title.string )

print( f"title_l = { title_l }\n\n")
print()
print()
"""


html = """\
<html>
<head>
<style> 
table, th, td {
  border: 1px solid black;
}
</style>
</head>
<body>

<h2>          Moveit Servers Smoke test     </h2>

<p>This notification is triggered upon successful completion of various smokes tests designed to confirm the functionality of the application:\n\n</p>

<table style="width:25%">
<tr>
    <th><p><font color="red">Website Server</th>
    <th><p><font color="red">Status</p></th>
    </tr>
    """
    
html_colum1 = """
    </tr>
    <td>webmiadmin01p</td>
    <td>Green</td>
    </tr>
    
    """


#website condintions 

text_l = []
print( f"l :- \n{l}\n")
print()
print()
print( f"error_list :- \n{ error_list }\n")

i = 0
for url in l:
    flag = False
    web_status_code = ""

    if( url in error_list):
            flag = True
    
    if( flag == True ):
        text_l.append( f"{ server_names[i] } Website service is down\n" )
        print (f"{ server_names[i] } Web service is down")
        html+=f"""
    </tr>
    <td>{ server_names[i] }</td>
    <td><p><font color="red">Down</p></td>
    </tr>
    
    """
    else:
        text_l.append( f"{ server_names[i] } Website service is up\n" )
        print (f"{ server_names[i] } Web service is up")
        html+=f"""
    </tr>
    <td>{ server_names[i] }</td>
    <td><p><font color="green">Up</p></td>
    </tr>"""
    i = i + 1
        
html+=  "</table></body>    "
        #SERVER = "localhost"

#email configuration
FROM = 'Abhijeet.Mitra@empower-retirement.com'      #-> Not required. Please remvoe it

TO = ["Abhijeet.Mitra@empower-retirement.com"] # must be a list -> Not required. Please remvoe it


#SUBJECT = "Moveit URL Smoke test"

# Record the MIME types of both parts - text/plain and text/html.
part1 = MIMEText(html, 'html')

# Attach parts into message container.
# According to RFC 2046, the last part of a multipart message, in this case
# the HTML message, is best and preferred.
msg.attach(part1)

# Send the message via local SMTP server.
s = smtplib.SMTP('smtp.gwl.com')
# sendmail function takes 3 arguments: sender's address, recipient's address
# and message to send - here it is sent as one string.
s.sendmail(me, you, msg.as_string())
s.quit()
# Send the mail
